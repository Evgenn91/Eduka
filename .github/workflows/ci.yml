name: Java CI/CD with Maven and Docker

on:  # это когда будет запускаться jobs
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:  # что делаем когде сработает условие из on
  build: # имя job(можно написать любое) CI job — сборка и тесты
    runs-on: ubuntu-latest   # Виртуальная машина, на которой будет выполняться шаги

    steps:                   # Последовательность шагов в одном job
      - name: Checkout code   #скачивает код
        uses: actions/checkout@v4

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build jar and test
        run: ./mvnw clean install

      - name: Archive JAR for deploy job
        uses: actions/upload-artifact@v3
        with:
          name: eduka-jar
          path: target/eduka-0.0.1-SNAPSHOT.jar

  deploy:  # CD job — пуш Docker и деплой
    needs: build  # ждем окончания сборки
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: eduka-jar
          path: ./target

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t evgenn4ke/eduka:latest .
          docker push evgenn4ke/eduka:latest

# Если хочешь сразу деплой на сервер, раскомментируй и настроь:
#      - name: Deploy to VPS via SSH
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.SERVER_IP }}
#          username: ${{ secrets.SERVER_USER }}
#          key: ${{ secrets.SERVER_SSH_KEY }}
#          script: |
#            docker pull evgenn4ke/eduka:latest
#            docker stop eduka || true
#            docker rm eduka || true
#            docker run -d --name eduka -p 8080:8080 evgenn4ke/eduka:latest